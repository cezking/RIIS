//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4952
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.4952 版自动生成。
// 
#pragma warning disable 1591

namespace CIPS.Dictionary.WebDict {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarshalByRefObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OleDbParameter[]))]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetClTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastModifyTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteStoredProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataTableBySqlCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClTableBySqlCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTableOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service(string url)
        {
            this.Url = url;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetClTableCompletedEventHandler GetClTableCompleted;
        
        /// <remarks/>
        public event GetTableCompletedEventHandler GetTableCompleted;
        
        /// <remarks/>
        public event GetTablesCompletedEventHandler GetTablesCompleted;
        
        /// <remarks/>
        public event GetLastModifyTimeCompletedEventHandler GetLastModifyTimeCompleted;
        
        /// <remarks/>
        public event ExecuteSqlCommandCompletedEventHandler ExecuteSqlCommandCompleted;
        
        /// <remarks/>
        public event ExecuteStoredProcedureCompletedEventHandler ExecuteStoredProcedureCompleted;
        
        /// <remarks/>
        public event GetDataTableBySqlCommandCompletedEventHandler GetDataTableBySqlCommandCompleted;
        
        /// <remarks/>
        public event GetClTableBySqlCommandCompletedEventHandler GetClTableBySqlCommandCompleted;
        
        /// <remarks/>
        public event UpdateTableCompletedEventHandler UpdateTableCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetClTable(string tablename, string param, int dbindex) {
            object[] results = this.Invoke("GetClTable", new object[] {
                        tablename,
                        param,
                        dbindex});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClTableAsync(string tablename, string param, int dbindex) {
            this.GetClTableAsync(tablename, param, dbindex, null);
        }
        
        /// <remarks/>
        public void GetClTableAsync(string tablename, string param, int dbindex, object userState) {
            if ((this.GetClTableOperationCompleted == null)) {
                this.GetClTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClTableOperationCompleted);
            }
            this.InvokeAsync("GetClTable", new object[] {
                        tablename,
                        param,
                        dbindex}, this.GetClTableOperationCompleted, userState);
        }
        
        private void OnGetClTableOperationCompleted(object arg) {
            if ((this.GetClTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClTableCompleted(this, new GetClTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetTable(string tablename, string param, int dbindex) {
            object[] results = this.Invoke("GetTable", new object[] {
                        tablename,
                        param,
                        dbindex});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTableAsync(string tablename, string param, int dbindex) {
            this.GetTableAsync(tablename, param, dbindex, null);
        }
        
        /// <remarks/>
        public void GetTableAsync(string tablename, string param, int dbindex, object userState) {
            if ((this.GetTableOperationCompleted == null)) {
                this.GetTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableOperationCompleted);
            }
            this.InvokeAsync("GetTable", new object[] {
                        tablename,
                        param,
                        dbindex}, this.GetTableOperationCompleted, userState);
        }
        
        private void OnGetTableOperationCompleted(object arg) {
            if ((this.GetTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableCompleted(this, new GetTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTables", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetTables(string[] tablenames1, string[] tablenames2) {
            object[] results = this.Invoke("GetTables", new object[] {
                        tablenames1,
                        tablenames2});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTablesAsync(string[] tablenames1, string[] tablenames2) {
            this.GetTablesAsync(tablenames1, tablenames2, null);
        }
        
        /// <remarks/>
        public void GetTablesAsync(string[] tablenames1, string[] tablenames2, object userState) {
            if ((this.GetTablesOperationCompleted == null)) {
                this.GetTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTablesOperationCompleted);
            }
            this.InvokeAsync("GetTables", new object[] {
                        tablenames1,
                        tablenames2}, this.GetTablesOperationCompleted, userState);
        }
        
        private void OnGetTablesOperationCompleted(object arg) {
            if ((this.GetTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTablesCompleted(this, new GetTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastModifyTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetLastModifyTime(string tablename, int dbindex) {
            object[] results = this.Invoke("GetLastModifyTime", new object[] {
                        tablename,
                        dbindex});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastModifyTimeAsync(string tablename, int dbindex) {
            this.GetLastModifyTimeAsync(tablename, dbindex, null);
        }
        
        /// <remarks/>
        public void GetLastModifyTimeAsync(string tablename, int dbindex, object userState) {
            if ((this.GetLastModifyTimeOperationCompleted == null)) {
                this.GetLastModifyTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastModifyTimeOperationCompleted);
            }
            this.InvokeAsync("GetLastModifyTime", new object[] {
                        tablename,
                        dbindex}, this.GetLastModifyTimeOperationCompleted, userState);
        }
        
        private void OnGetLastModifyTimeOperationCompleted(object arg) {
            if ((this.GetLastModifyTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastModifyTimeCompleted(this, new GetLastModifyTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteSqlCommand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExecuteSqlCommand(string cmdstr, int dbindex) {
            object[] results = this.Invoke("ExecuteSqlCommand", new object[] {
                        cmdstr,
                        dbindex});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlCommandAsync(string cmdstr, int dbindex) {
            this.ExecuteSqlCommandAsync(cmdstr, dbindex, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlCommandAsync(string cmdstr, int dbindex, object userState) {
            if ((this.ExecuteSqlCommandOperationCompleted == null)) {
                this.ExecuteSqlCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlCommandOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlCommand", new object[] {
                        cmdstr,
                        dbindex}, this.ExecuteSqlCommandOperationCompleted, userState);
        }
        
        private void OnExecuteSqlCommandOperationCompleted(object arg) {
            if ((this.ExecuteSqlCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlCommandCompleted(this, new ExecuteSqlCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteStoredProcedure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExecuteStoredProcedure(string cmdstr, OleDbParameter[] param, int dbindex) {
            object[] results = this.Invoke("ExecuteStoredProcedure", new object[] {
                        cmdstr,
                        param,
                        dbindex});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteStoredProcedureAsync(string cmdstr, OleDbParameter[] param, int dbindex) {
            this.ExecuteStoredProcedureAsync(cmdstr, param, dbindex, null);
        }
        
        /// <remarks/>
        public void ExecuteStoredProcedureAsync(string cmdstr, OleDbParameter[] param, int dbindex, object userState) {
            if ((this.ExecuteStoredProcedureOperationCompleted == null)) {
                this.ExecuteStoredProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteStoredProcedureOperationCompleted);
            }
            this.InvokeAsync("ExecuteStoredProcedure", new object[] {
                        cmdstr,
                        param,
                        dbindex}, this.ExecuteStoredProcedureOperationCompleted, userState);
        }
        
        private void OnExecuteStoredProcedureOperationCompleted(object arg) {
            if ((this.ExecuteStoredProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteStoredProcedureCompleted(this, new ExecuteStoredProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataTableBySqlCommand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDataTableBySqlCommand(string cmdstr, int dbindex) {
            object[] results = this.Invoke("GetDataTableBySqlCommand", new object[] {
                        cmdstr,
                        dbindex});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataTableBySqlCommandAsync(string cmdstr, int dbindex) {
            this.GetDataTableBySqlCommandAsync(cmdstr, dbindex, null);
        }
        
        /// <remarks/>
        public void GetDataTableBySqlCommandAsync(string cmdstr, int dbindex, object userState) {
            if ((this.GetDataTableBySqlCommandOperationCompleted == null)) {
                this.GetDataTableBySqlCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataTableBySqlCommandOperationCompleted);
            }
            this.InvokeAsync("GetDataTableBySqlCommand", new object[] {
                        cmdstr,
                        dbindex}, this.GetDataTableBySqlCommandOperationCompleted, userState);
        }
        
        private void OnGetDataTableBySqlCommandOperationCompleted(object arg) {
            if ((this.GetDataTableBySqlCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataTableBySqlCommandCompleted(this, new GetDataTableBySqlCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClTableBySqlCommand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetClTableBySqlCommand(string cmdstr, int dbindex) {
            object[] results = this.Invoke("GetClTableBySqlCommand", new object[] {
                        cmdstr,
                        dbindex});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClTableBySqlCommandAsync(string cmdstr, int dbindex) {
            this.GetClTableBySqlCommandAsync(cmdstr, dbindex, null);
        }
        
        /// <remarks/>
        public void GetClTableBySqlCommandAsync(string cmdstr, int dbindex, object userState) {
            if ((this.GetClTableBySqlCommandOperationCompleted == null)) {
                this.GetClTableBySqlCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClTableBySqlCommandOperationCompleted);
            }
            this.InvokeAsync("GetClTableBySqlCommand", new object[] {
                        cmdstr,
                        dbindex}, this.GetClTableBySqlCommandOperationCompleted, userState);
        }
        
        private void OnGetClTableBySqlCommandOperationCompleted(object arg) {
            if ((this.GetClTableBySqlCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClTableBySqlCommandCompleted(this, new GetClTableBySqlCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTable([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] b, int dbindex) {
            object[] results = this.Invoke("UpdateTable", new object[] {
                        b,
                        dbindex});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTableAsync(byte[] b, int dbindex) {
            this.UpdateTableAsync(b, dbindex, null);
        }
        
        /// <remarks/>
        public void UpdateTableAsync(byte[] b, int dbindex, object userState) {
            if ((this.UpdateTableOperationCompleted == null)) {
                this.UpdateTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTableOperationCompleted);
            }
            this.InvokeAsync("UpdateTable", new object[] {
                        b,
                        dbindex}, this.UpdateTableOperationCompleted, userState);
        }
        
        private void OnUpdateTableOperationCompleted(object arg) {
            if ((this.UpdateTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTableCompleted(this, new UpdateTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OleDbParameter : DbParameter {
        
        private OleDbType oleDbTypeField;
        
        private byte precisionField;
        
        private byte scaleField;
        
        public OleDbParameter() {
            this.precisionField = ((byte)(0));
            this.scaleField = ((byte)(0));
        }
        
        /// <remarks/>
        public OleDbType OleDbType {
            get {
                return this.oleDbTypeField;
            }
            set {
                this.oleDbTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "0")]
        public byte Precision {
            get {
                return this.precisionField;
            }
            set {
                this.precisionField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "0")]
        public byte Scale {
            get {
                return this.scaleField;
            }
            set {
                this.scaleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum OleDbType {
        
        /// <remarks/>
        BigInt,
        
        /// <remarks/>
        Binary,
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        BSTR,
        
        /// <remarks/>
        Char,
        
        /// <remarks/>
        Currency,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        DBDate,
        
        /// <remarks/>
        DBTime,
        
        /// <remarks/>
        DBTimeStamp,
        
        /// <remarks/>
        Decimal,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Empty,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Filetime,
        
        /// <remarks/>
        Guid,
        
        /// <remarks/>
        IDispatch,
        
        /// <remarks/>
        Integer,
        
        /// <remarks/>
        IUnknown,
        
        /// <remarks/>
        LongVarBinary,
        
        /// <remarks/>
        LongVarChar,
        
        /// <remarks/>
        LongVarWChar,
        
        /// <remarks/>
        Numeric,
        
        /// <remarks/>
        PropVariant,
        
        /// <remarks/>
        Single,
        
        /// <remarks/>
        SmallInt,
        
        /// <remarks/>
        TinyInt,
        
        /// <remarks/>
        UnsignedBigInt,
        
        /// <remarks/>
        UnsignedInt,
        
        /// <remarks/>
        UnsignedSmallInt,
        
        /// <remarks/>
        UnsignedTinyInt,
        
        /// <remarks/>
        VarBinary,
        
        /// <remarks/>
        VarChar,
        
        /// <remarks/>
        Variant,
        
        /// <remarks/>
        VarNumeric,
        
        /// <remarks/>
        VarWChar,
        
        /// <remarks/>
        WChar,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OleDbParameter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class DbParameter : MarshalByRefObject {
        
        private DbType dbTypeField;
        
        private ParameterDirection directionField;
        
        private bool isNullableField;
        
        private string parameterNameField;
        
        private int sizeField;
        
        private string sourceColumnField;
        
        private bool sourceColumnNullMappingField;
        
        private DataRowVersion sourceVersionField;
        
        private object valueField;
        
        public DbParameter() {
            this.directionField = ParameterDirection.Input;
            this.parameterNameField = "";
            this.sourceColumnField = "";
            this.sourceColumnNullMappingField = false;
            this.sourceVersionField = DataRowVersion.Current;
        }
        
        /// <remarks/>
        public DbType DbType {
            get {
                return this.dbTypeField;
            }
            set {
                this.dbTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(ParameterDirection.Input)]
        public ParameterDirection Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNullable {
            get {
                return this.isNullableField;
            }
            set {
                this.isNullableField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
            }
        }
        
        /// <remarks/>
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string SourceColumn {
            get {
                return this.sourceColumnField;
            }
            set {
                this.sourceColumnField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SourceColumnNullMapping {
            get {
                return this.sourceColumnNullMappingField;
            }
            set {
                this.sourceColumnNullMappingField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(DataRowVersion.Current)]
        public DataRowVersion SourceVersion {
            get {
                return this.sourceVersionField;
            }
            set {
                this.sourceVersionField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum DbType {
        
        /// <remarks/>
        AnsiString,
        
        /// <remarks/>
        Binary,
        
        /// <remarks/>
        Byte,
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        Currency,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Decimal,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Guid,
        
        /// <remarks/>
        Int16,
        
        /// <remarks/>
        Int32,
        
        /// <remarks/>
        Int64,
        
        /// <remarks/>
        Object,
        
        /// <remarks/>
        SByte,
        
        /// <remarks/>
        Single,
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Time,
        
        /// <remarks/>
        UInt16,
        
        /// <remarks/>
        UInt32,
        
        /// <remarks/>
        UInt64,
        
        /// <remarks/>
        VarNumeric,
        
        /// <remarks/>
        AnsiStringFixedLength,
        
        /// <remarks/>
        StringFixedLength,
        
        /// <remarks/>
        Xml,
        
        /// <remarks/>
        DateTime2,
        
        /// <remarks/>
        DateTimeOffset,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ParameterDirection {
        
        /// <remarks/>
        Input,
        
        /// <remarks/>
        Output,
        
        /// <remarks/>
        InputOutput,
        
        /// <remarks/>
        ReturnValue,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum DataRowVersion {
        
        /// <remarks/>
        Original,
        
        /// <remarks/>
        Current,
        
        /// <remarks/>
        Proposed,
        
        /// <remarks/>
        Default,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DbParameter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OleDbParameter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class MarshalByRefObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetClTableCompletedEventHandler(object sender, GetClTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetTableCompletedEventHandler(object sender, GetTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetTablesCompletedEventHandler(object sender, GetTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetLastModifyTimeCompletedEventHandler(object sender, GetLastModifyTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastModifyTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastModifyTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ExecuteSqlCommandCompletedEventHandler(object sender, ExecuteSqlCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ExecuteStoredProcedureCompletedEventHandler(object sender, ExecuteStoredProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteStoredProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteStoredProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetDataTableBySqlCommandCompletedEventHandler(object sender, GetDataTableBySqlCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataTableBySqlCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataTableBySqlCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetClTableBySqlCommandCompletedEventHandler(object sender, GetClTableBySqlCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClTableBySqlCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClTableBySqlCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateTableCompletedEventHandler(object sender, UpdateTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591